[/
  Copyright 2020 Ilia Shirobokov.
  Copyright 2020 Alisa Cherniaeva.

  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:modular Modular Number Types]
The following backends provide modular number arithmetic:

[table
[[Backend Type][Header][Radix][Dependencies][Pros][Cons]]
[[`cpp_modular`][boost/multiprecision/cpp_modular.hpp][2][None][An all C++ Boost-licensed implementation.][Slower than [mpc].]]
[[`gmp_modular`][boost/multiprecision/gmp_modular.hpp][2][[mpc]][Very fast and efficient back-end.][Dependency on LGLP-licensed [MPC] library.]]
[[`tommath_modular`][boost/multiprecision/tommath_modular.hpp][2][`__float128` and libquadmath][Very fast and efficient number type.][128-bit precision only, and resticted to GCC.]]
[[`modular_adaptor`][boost/multiprecision/modular/modular_adaptor.hpp][-][none][Can convert any backend type into a complex number backend.][Not a number in its own right, and hard to use as a result.]]
]

[include tutorial_cpp_modular.qbk]
[include tutorial_gmp_modular.qbk]
[include tutorial_tommath_modular.qbk]
[include tutorial_modular_adaptor.qbk]

[endsect] [/section:modular Modular Number Types]
